language: go

go:
- 1.13.x
- 1.14.x

os: linux
dist: bionic

cache:
  directories:
  - ${HOME}/assets

before_install:
- sudo apt-get -qq -y install conntrack

before_script:
- |-
  # Install kubectl.
  version="v1.18.1"
  asset_path="${HOME}/assets/kubectl-${version}"
  asset_url="https://storage.googleapis.com/kubernetes-release/release/${version}/bin/linux/amd64/kubectl"
  if [ ! -f "${asset_path}" ]; then
    curl -Lo "${asset_path}" "${asset_url}"
    chmod +x "${asset_path}"
  fi
  sudo cp "${asset_path}" /usr/local/bin/kubectl
- |-
  # Install minikube.
  version="v1.10.1"
  asset_path="${HOME}/assets/minikube-${version}"
  asset_url="https://storage.googleapis.com/minikube/releases/${version}/minikube-linux-amd64"
  if [ ! -f "${asset_path}" ]; then
    curl -Lo "${asset_path}" "${asset_url}"
    chmod +x "${asset_path}"
  fi
  sudo cp "${asset_path}" /usr/local/bin/minikube
- |-
  # Install helm.
  version="v3.2.1"
  asset_path="${HOME}/assets/helm-${version}.tar.gz"
  asset_url="https://get.helm.sh/helm-${version}-linux-amd64.tar.gz"
  if [ ! -f "${asset_path}" ]; then
    curl -Lo "${asset_path}" "${asset_url}"
  fi
  sudo tar zxf "${asset_path}" --strip-components=1 --directory /usr/local/bin/ linux-amd64/helm
- |-
  # Install svcat.
  version="v0.3.0"
  asset_path="${HOME}/assets/svcat-${version}"
  asset_url="https://download.svcat.sh/cli/${version}/linux/amd64/svcat"
  if [ ! -f "${asset_path}" ]; then
    curl -Lo "${asset_path}" "${asset_url}"
    chmod +x "${asset_path}"
  fi
  sudo cp "${asset_path}" /usr/local/bin/svcat

services:
- docker

script:
- make build
- make test-unit

jobs:
  include:
  - name: Verify
    stage: verify
    script: make verify
  - name: Lint
    stage: lint
    go: 1.14.x
    script: make lint
  - name: Integration tests
    stage: test-integration
    env:
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=${HOME}
    - CHANGE_MINIKUBE_NONE_USER=true
    script: ci/test_integration.sh

stages:
# - verify
# - lint
# - test
- test-integration

deploy:
  provider: script
  script: make release
  on:
    repo: kubernetes-sigs/minibroker
    all_branches: true
